package vn.iotstar.controllers.admin;

import java.io.IOException;
import java.util.List;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import vn.iotstar.entities.Coupon;
import vn.iotstar.entities.Shop;
import vn.iotstar.services.admin.AdminCouponService;
import vn.iotstar.services.admin.AdminShopService;

@WebServlet(urlPatterns = {"/admin/coupons", "/admin/coupons/add", "/admin/coupons/edit", "/admin/coupons/delete"})
public class AdminCouponController extends HttpServlet {
    private static final long serialVersionUID = 1L;
    
    // Gi·∫£ ƒë·ªãnh b·∫°n ƒë√£ kh·ªüi t·∫°o c√°c Service n√†y (v√≠ d·ª•: qua Dependency Injection ho·∫∑c kh·ªüi t·∫°o th·ªß c√¥ng)
    private AdminCouponService couponService = new AdminCouponService(); 
    private AdminShopService shopService = new AdminShopService();

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        String url = request.getRequestURI();

        // üü© Trang danh s√°ch Coupon (list.jsp)
        if (url.endsWith("/admin/coupons")) {
            handleCouponList(request, response);
            
        // üü® Trang th√™m m·ªõi Coupon (add.jsp)
        } else if (url.endsWith("/admin/coupons/add")) {
//            handleCouponAddView(request, response);
            
        // üü¶ Trang ch·ªânh s·ª≠a Coupon (edit.jsp)
        } else if (url.endsWith("/admin/coupons/edit")) {
//             handleCouponEditView(request, response);
        }
        // ... C√°c x·ª≠ l√Ω GET kh√°c (v√≠ d·ª•: delete confirmation page n·∫øu c·∫ßn)
    }
    
    // --- PRIVATE HANDLERS ---
    
    /**
     * X·ª≠ l√Ω hi·ªÉn th·ªã danh s√°ch Coupon v·ªõi t√¨m ki·∫øm, l·ªçc v√† ph√¢n trang.
     */
    private void handleCouponList(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        // --- 1. L·∫•y v√† X·ª≠ l√Ω Tham s·ªë T√¨m ki·∫øm v√† L·ªçc ---
        
        String keyword = request.getParameter("keyword");
        
        // L·ªçc theo Shop
        String shopIdParam = request.getParameter("shopId");
        Shop shopFilter = null;
        
        if (shopIdParam != null && !shopIdParam.isEmpty()) {
            try {
                // L·∫•y ƒë·ªëi t∆∞·ª£ng Shop d·ª±a tr√™n ID ƒë·ªÉ truy·ªÅn v√†o Service
                long shopId = Long.parseLong(shopIdParam);
                shopFilter = shopService.findById(shopId); 
            } catch (NumberFormatException e) {
                // B·ªè qua n·∫øu ID kh√¥ng h·ª£p l·ªá
            }
        }

        // --- 2. X·ª≠ l√Ω Ph√¢n trang ---
        
        String pageParam = request.getParameter("page");
        int currentPage = 1;
        int pageSize = 10; // K√≠ch th∆∞·ªõc trang m·∫∑c ƒë·ªãnh

        if (pageParam != null && !pageParam.isEmpty()) {
            try {
                currentPage = Integer.parseInt(pageParam);
            } catch (NumberFormatException e) {
                currentPage = 1;
            }
        }
        
        // --- 3. G·ªçi Service ƒë·ªÉ l·∫•y d·ªØ li·ªáu ---
        
        // L·∫•y danh s√°ch Coupon (c√≥ t√¨m ki·∫øm + l·ªçc + ph√¢n trang)
        List<Coupon> coupons = couponService.searchCoupons(keyword, shopFilter, currentPage, pageSize);
        
        // L·∫•y t·ªïng s·ªë Coupon (ƒë·ªÉ t√≠nh t·ªïng s·ªë trang)
        int totalCoupons = couponService.countCoupons(keyword, shopFilter);
        int totalPages = (int) Math.ceil((double) totalCoupons / pageSize);
        
        // L·∫•y danh s√°ch t·∫•t c·∫£ Shops (ƒë·ªÉ ƒë·ªï v√†o b·ªô l·ªçc tr√™n JSP)
        List<Shop> allShops = shopService.findAllShopsValidate(); 
        
        // --- 4. ƒê·∫∑t thu·ªôc t√≠nh v√† Chuy·ªÉn h∆∞·ªõng ---

        request.setAttribute("coupons", coupons);
        
        // D·ªØ li·ªáu cho b·ªô l·ªçc
        request.setAttribute("shops", allShops);
        request.setAttribute("keyword", keyword); // Gi·ªØ l·∫°i gi√° tr·ªã t√¨m ki·∫øm
        
        // D·ªØ li·ªáu ph√¢n trang
        request.setAttribute("currentPage", currentPage);
        request.setAttribute("totalPages", totalPages);

        // Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang JSP qu·∫£n l√Ω Coupon
        request.getRequestDispatcher("/WEB-INF/views/admin/coupons/list.jsp").forward(request, response);
    }
}
